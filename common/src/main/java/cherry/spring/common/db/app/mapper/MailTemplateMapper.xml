<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cherry.spring.common.db.app.mapper.MailTemplateMapper">
	<resultMap id="templateMap"
		type="cherry.spring.common.db.app.dto.MailTemplateDto">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="sender" property="sender" jdbcType="VARCHAR" />
		<result column="locale" property="locale" jdbcType="VARCHAR" />
		<result column="subject" property="subject" jdbcType="VARCHAR" />
		<result column="body" property="body" jdbcType="VARCHAR" />
		<collection property="mailAddrList" resultMap="addressMap" />
	</resultMap>
	<resultMap id="addressMap"
		type="cherry.spring.common.db.app.dto.MailTemplateAddressDto">
		<id column="addr_id" property="addrId" jdbcType="INTEGER" />
		<result column="rcpt_type" property="rcptType" jdbcType="VARCHAR" />
		<result column="mail_addr" property="mailAddr" jdbcType="VARCHAR" />
	</resultMap>
	<select id="findByName" resultMap="templateMap">
		SELECT
			A.id        AS id,
			A.name      AS name,
			A.sender    AS sender,
			B.locale    AS locale,
			B.subject   AS subject,
			B.body      AS body,
			C.id        AS addr_id,
			C.rcpt_type AS rcpt_type,
			C.mail_addr AS mail_addr
		FROM
			mail_templates AS A
			JOIN mail_template_texts AS B
			ON
				B.mail_template_id = A.id
				AND
				B.locale = #{locale,jdbcType=VARCHAR}
				AND
				B.deleted_flg = 0
			LEFT OUTER JOIN mail_template_addresses AS C
			ON
				C.mail_template_id = A.id
				AND
				C.deleted_flg = 0
		WHERE
			A.name = #{name,jdbcType=VARCHAR}
			AND
			A.deleted_flg = 0
		ORDER BY
			C.id
	</select>
</mapper>
