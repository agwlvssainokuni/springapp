package cherry.spring.common.db.gen.mapper;

import cherry.spring.common.db.gen.dto.CodeMaster;
import cherry.spring.common.db.gen.dto.CodeMasterCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface CodeMasterMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbggenerated
     */
    @SelectProvider(type=CodeMasterSqlProvider.class, method="countByExample")
    int countByExample(CodeMasterCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbggenerated
     */
    @DeleteProvider(type=CodeMasterSqlProvider.class, method="deleteByExample")
    int deleteByExample(CodeMasterCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbggenerated
     */
    @Delete({
        "delete from CODE_MASTER",
        "where ID = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbggenerated
     */
    @Insert({
        "insert into CODE_MASTER (NAME, VALUE, ",
        "LABEL, SORT_ORDER, ",
        "UPDATED_AT, CREATED_AT, ",
        "LOCK_VERSION, DELETED_FLG)",
        "values (#{name,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, ",
        "#{label,jdbcType=VARCHAR}, #{sortOrder,jdbcType=INTEGER}, ",
        "#{updatedAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP}, ",
        "#{lockVersion,jdbcType=INTEGER}, #{deletedFlg,jdbcType=INTEGER})"
    })
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insert(CodeMaster record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbggenerated
     */
    @InsertProvider(type=CodeMasterSqlProvider.class, method="insertSelective")
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insertSelective(CodeMaster record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbggenerated
     */
    @SelectProvider(type=CodeMasterSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="NAME", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="VALUE", property="value", jdbcType=JdbcType.VARCHAR),
        @Result(column="LABEL", property="label", jdbcType=JdbcType.VARCHAR),
        @Result(column="SORT_ORDER", property="sortOrder", jdbcType=JdbcType.INTEGER),
        @Result(column="UPDATED_AT", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CREATED_AT", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="LOCK_VERSION", property="lockVersion", jdbcType=JdbcType.INTEGER),
        @Result(column="DELETED_FLG", property="deletedFlg", jdbcType=JdbcType.INTEGER)
    })
    List<CodeMaster> selectByExampleWithRowbounds(CodeMasterCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbggenerated
     */
    @SelectProvider(type=CodeMasterSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="NAME", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="VALUE", property="value", jdbcType=JdbcType.VARCHAR),
        @Result(column="LABEL", property="label", jdbcType=JdbcType.VARCHAR),
        @Result(column="SORT_ORDER", property="sortOrder", jdbcType=JdbcType.INTEGER),
        @Result(column="UPDATED_AT", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CREATED_AT", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="LOCK_VERSION", property="lockVersion", jdbcType=JdbcType.INTEGER),
        @Result(column="DELETED_FLG", property="deletedFlg", jdbcType=JdbcType.INTEGER)
    })
    List<CodeMaster> selectByExample(CodeMasterCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ID, NAME, VALUE, LABEL, SORT_ORDER, UPDATED_AT, CREATED_AT, LOCK_VERSION, DELETED_FLG",
        "from CODE_MASTER",
        "where ID = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="NAME", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="VALUE", property="value", jdbcType=JdbcType.VARCHAR),
        @Result(column="LABEL", property="label", jdbcType=JdbcType.VARCHAR),
        @Result(column="SORT_ORDER", property="sortOrder", jdbcType=JdbcType.INTEGER),
        @Result(column="UPDATED_AT", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CREATED_AT", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="LOCK_VERSION", property="lockVersion", jdbcType=JdbcType.INTEGER),
        @Result(column="DELETED_FLG", property="deletedFlg", jdbcType=JdbcType.INTEGER)
    })
    CodeMaster selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbggenerated
     */
    @UpdateProvider(type=CodeMasterSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") CodeMaster record, @Param("example") CodeMasterCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbggenerated
     */
    @UpdateProvider(type=CodeMasterSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") CodeMaster record, @Param("example") CodeMasterCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbggenerated
     */
    @UpdateProvider(type=CodeMasterSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(CodeMaster record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbggenerated
     */
    @Update({
        "update CODE_MASTER",
        "set NAME = #{name,jdbcType=VARCHAR},",
          "VALUE = #{value,jdbcType=VARCHAR},",
          "LABEL = #{label,jdbcType=VARCHAR},",
          "SORT_ORDER = #{sortOrder,jdbcType=INTEGER},",
          "UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},",
          "CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},",
          "LOCK_VERSION = #{lockVersion,jdbcType=INTEGER},",
          "DELETED_FLG = #{deletedFlg,jdbcType=INTEGER}",
        "where ID = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(CodeMaster record);
}