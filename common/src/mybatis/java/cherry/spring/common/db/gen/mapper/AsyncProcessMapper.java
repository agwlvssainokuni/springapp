package cherry.spring.common.db.gen.mapper;

import cherry.spring.common.db.gen.dto.AsyncProcess;
import cherry.spring.common.db.gen.dto.AsyncProcessCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface AsyncProcessMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ASYNC_PROCESS
     *
     * @mbggenerated
     */
    @SelectProvider(type=AsyncProcessSqlProvider.class, method="countByExample")
    int countByExample(AsyncProcessCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ASYNC_PROCESS
     *
     * @mbggenerated
     */
    @DeleteProvider(type=AsyncProcessSqlProvider.class, method="deleteByExample")
    int deleteByExample(AsyncProcessCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ASYNC_PROCESS
     *
     * @mbggenerated
     */
    @Delete({
        "delete from ASYNC_PROCESS",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ASYNC_PROCESS
     *
     * @mbggenerated
     */
    @Insert({
        "insert into ASYNC_PROCESS (LAUNCHED_BY, TYPE, ",
        "STATUS, LAUNCHED_AT, ",
        "INVOKED_AT, STARTED_AT, ",
        "FINISHED_AT, UPDATED_AT, ",
        "CREATED_AT, LOCK_VERSION, ",
        "DELETED_FLG)",
        "values (#{launchedBy,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, ",
        "#{status,jdbcType=VARCHAR}, #{launchedAt,jdbcType=TIMESTAMP}, ",
        "#{invokedAt,jdbcType=TIMESTAMP}, #{startedAt,jdbcType=TIMESTAMP}, ",
        "#{finishedAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, ",
        "#{createdAt,jdbcType=TIMESTAMP}, #{lockVersion,jdbcType=INTEGER}, ",
        "#{deletedFlg,jdbcType=INTEGER})"
    })
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insert(AsyncProcess record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ASYNC_PROCESS
     *
     * @mbggenerated
     */
    @InsertProvider(type=AsyncProcessSqlProvider.class, method="insertSelective")
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insertSelective(AsyncProcess record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ASYNC_PROCESS
     *
     * @mbggenerated
     */
    @SelectProvider(type=AsyncProcessSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="LAUNCHED_BY", property="launchedBy", jdbcType=JdbcType.VARCHAR),
        @Result(column="TYPE", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="LAUNCHED_AT", property="launchedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="INVOKED_AT", property="invokedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="STARTED_AT", property="startedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="FINISHED_AT", property="finishedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="UPDATED_AT", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CREATED_AT", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="LOCK_VERSION", property="lockVersion", jdbcType=JdbcType.INTEGER),
        @Result(column="DELETED_FLG", property="deletedFlg", jdbcType=JdbcType.INTEGER)
    })
    List<AsyncProcess> selectByExampleWithRowbounds(AsyncProcessCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ASYNC_PROCESS
     *
     * @mbggenerated
     */
    @SelectProvider(type=AsyncProcessSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="LAUNCHED_BY", property="launchedBy", jdbcType=JdbcType.VARCHAR),
        @Result(column="TYPE", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="LAUNCHED_AT", property="launchedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="INVOKED_AT", property="invokedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="STARTED_AT", property="startedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="FINISHED_AT", property="finishedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="UPDATED_AT", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CREATED_AT", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="LOCK_VERSION", property="lockVersion", jdbcType=JdbcType.INTEGER),
        @Result(column="DELETED_FLG", property="deletedFlg", jdbcType=JdbcType.INTEGER)
    })
    List<AsyncProcess> selectByExample(AsyncProcessCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ASYNC_PROCESS
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ID, LAUNCHED_BY, TYPE, STATUS, LAUNCHED_AT, INVOKED_AT, STARTED_AT, FINISHED_AT, ",
        "UPDATED_AT, CREATED_AT, LOCK_VERSION, DELETED_FLG",
        "from ASYNC_PROCESS",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="LAUNCHED_BY", property="launchedBy", jdbcType=JdbcType.VARCHAR),
        @Result(column="TYPE", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="LAUNCHED_AT", property="launchedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="INVOKED_AT", property="invokedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="STARTED_AT", property="startedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="FINISHED_AT", property="finishedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="UPDATED_AT", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CREATED_AT", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="LOCK_VERSION", property="lockVersion", jdbcType=JdbcType.INTEGER),
        @Result(column="DELETED_FLG", property="deletedFlg", jdbcType=JdbcType.INTEGER)
    })
    AsyncProcess selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ASYNC_PROCESS
     *
     * @mbggenerated
     */
    @UpdateProvider(type=AsyncProcessSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") AsyncProcess record, @Param("example") AsyncProcessCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ASYNC_PROCESS
     *
     * @mbggenerated
     */
    @UpdateProvider(type=AsyncProcessSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") AsyncProcess record, @Param("example") AsyncProcessCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ASYNC_PROCESS
     *
     * @mbggenerated
     */
    @UpdateProvider(type=AsyncProcessSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(AsyncProcess record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ASYNC_PROCESS
     *
     * @mbggenerated
     */
    @Update({
        "update ASYNC_PROCESS",
        "set LAUNCHED_BY = #{launchedBy,jdbcType=VARCHAR},",
          "TYPE = #{type,jdbcType=VARCHAR},",
          "STATUS = #{status,jdbcType=VARCHAR},",
          "LAUNCHED_AT = #{launchedAt,jdbcType=TIMESTAMP},",
          "INVOKED_AT = #{invokedAt,jdbcType=TIMESTAMP},",
          "STARTED_AT = #{startedAt,jdbcType=TIMESTAMP},",
          "FINISHED_AT = #{finishedAt,jdbcType=TIMESTAMP},",
          "UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},",
          "CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},",
          "LOCK_VERSION = #{lockVersion,jdbcType=INTEGER},",
          "DELETED_FLG = #{deletedFlg,jdbcType=INTEGER}",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(AsyncProcess record);
}