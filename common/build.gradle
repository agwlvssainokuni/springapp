apply plugin: "eclipse-wtp"

ext {
	versionH2db = "1.4.180"
	versionFlyway = "3.0"
	versionJodaTime = "2.4"
	versionGuava = "18.0"
	versionCommonsPool = "1.6"
	versionCommonsDbcp2 = "2.0.1"
	versionCommonsLang3 = "3.3.2"
	versionCommonsMath3 = "3.2"
	versionCommonsCodec = "1.9"
	versionVelocity = "1.7"
	versionFluentLogger = "0.2.11"
	versionSlf4j = "1.7.7"
	versionLogback = "1.1.2"
	versionMyBatis = "3.2.7"
	versionMyBatisSpring = "1.2.2"
	versionQuerydsl = "3.4.3"
	versionJackson = "2.4.2"
	versionAspectJ = "1.8.2"
	versionAopalliance = "1.0"
	versionSpring = "4.1.0.RELEASE"
	versionSpringLdap = "2.0.2.RELEASE"
	versionSpringSecurity = "3.2.5.RELEASE"
	versionSpringMobile = "1.1.2.RELEASE"
	versionVividJts = "1.11"
	versionSpringDataJDBC = "1.0.0.RELEASE"
	versionSpringDataCommons = "1.8.2.RELEASE"
	versionSpringDataRest = "2.1.2.RELEASE"
	versionSpringWs = "2.2.0.RELEASE"
	versionHibernateValidator = "5.1.2.Final"
	versionJavaMail = "1.4.7"
	versionJavaValidation = "1.1.0.Final"
	versionJavaEl = "3.0.0"
	versionJavaServlet = "3.0.1"
	versionJavaJsp = "2.2.1"
	versionJavaJms = "1.1-rev-1"
	versionJavaTransaction = "1.1-rev-1"
	versionLombok = "1.14.4"
	versionJunit = "4.11"
	versionMockito = "1.9.5"
}

dependencies {
	compile project(":dbschema")
	compile "com.h2database:h2:${versionH2db}"
	compile "org.flywaydb:flyway-core:${versionFlyway}"
	compile "joda-time:joda-time:${versionJodaTime}"
	compile "com.google.guava:guava:${versionGuava}"
	compile "commons-pool:commons-pool:${versionCommonsPool}"
	compile "org.apache.commons:commons-dbcp2:${versionCommonsDbcp2}"
	compile "org.apache.commons:commons-lang3:${versionCommonsLang3}"
	compile "org.apache.commons:commons-math3:${versionCommonsMath3}"
	compile "commons-codec:commons-codec:${versionCommonsCodec}"
	compile "org.apache.velocity:velocity:${versionVelocity}"
	compile "org.fluentd:fluent-logger:${versionFluentLogger}"
	compile "org.slf4j:slf4j-api:${versionSlf4j}"
	compile "org.slf4j:jcl-over-slf4j:${versionSlf4j}"
	compile "ch.qos.logback:logback-core:${versionLogback}"
	compile "ch.qos.logback:logback-classic:${versionLogback}"
	compile "org.mybatis:mybatis:${versionMyBatis}"
	compile "org.mybatis:mybatis-spring:${versionMyBatisSpring}"
	compile "com.mysema.querydsl:querydsl-sql:${versionQuerydsl}"
	compile "com.mysema.querydsl:querydsl-sql-codegen:${versionQuerydsl}"
	compile "com.fasterxml.jackson.core:jackson-core:${versionJackson}"
	compile "com.fasterxml.jackson.core:jackson-annotations:${versionJackson}"
	compile "com.fasterxml.jackson.core:jackson-databind:${versionJackson}"
	compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:${versionJackson}"
	compile "org.aspectj:aspectjrt:${versionAspectJ}"
	compile "org.aspectj:aspectjweaver:${versionAspectJ}"
	compile "aopalliance:aopalliance:${versionAopalliance}"
	compile "org.springframework:spring-core:${versionSpring}"
	compile "org.springframework:spring-beans:${versionSpring}"
	compile "org.springframework:spring-expression:${versionSpring}"
	compile "org.springframework:spring-aop:${versionSpring}"
	compile "org.springframework:spring-context:${versionSpring}"
	compile "org.springframework:spring-context-support:${versionSpring}"
	compile "org.springframework:spring-tx:${versionSpring}"
	compile "org.springframework:spring-jdbc:${versionSpring}"
	compile "org.springframework:spring-orm:${versionSpring}"
	compile "org.springframework:spring-oxm:${versionSpring}"
	compile "org.springframework:spring-jms:${versionSpring}"
	compile "org.springframework:spring-web:${versionSpring}"
	compile "org.springframework:spring-webmvc:${versionSpring}"
	compile "org.springframework.ldap:spring-ldap-core:${versionSpringLdap}"
	compile "org.springframework.ldap:spring-ldap-core-tiger:${versionSpringLdap}"
	compile "org.springframework.security:spring-security-core:${versionSpringSecurity}"
	compile "org.springframework.security:spring-security-acl:${versionSpringSecurity}"
	compile "org.springframework.security:spring-security-web:${versionSpringSecurity}"
	compile "org.springframework.security:spring-security-taglibs:${versionSpringSecurity}"
	compile "org.springframework.security:spring-security-ldap:${versionSpringSecurity}"
	compile "org.springframework.security:spring-security-config:${versionSpringSecurity}"
	compile "org.springframework.mobile:spring-mobile-device:${versionSpringMobile}"
	compile "com.vividsolutions:jts:${versionVividJts}"
	compile "org.springframework.data:spring-data-jdbc-core:${versionSpringDataJDBC}"
	compile "org.springframework.data:spring-data-commons:${versionSpringDataCommons}"
	compile "org.springframework.data:spring-data-rest-core:${versionSpringDataRest}"
	compile "org.springframework.data:spring-data-rest-webmvc:${versionSpringDataRest}"
	compile "org.springframework.ws:spring-xml:${versionSpringWs}"
	compile "org.springframework.ws:spring-ws-core:${versionSpringWs}"
	//	compile "org.springframework.ws:spring-ws-security:${versionSpringWs}"
	compile "org.springframework.ws:spring-ws-support:${versionSpringWs}"
	compile "org.hibernate:hibernate-validator:${versionHibernateValidator}"
	compile "javax.mail:mail:${versionJavaMail}"
	compile "javax.validation:validation-api:${versionJavaValidation}"
	compile "javax.el:javax.el-api:${versionJavaEl}"
	provided "javax.servlet:javax.servlet-api:${versionJavaServlet}"
	provided "javax.servlet.jsp:javax.servlet.jsp-api:${versionJavaJsp}"
	provided "javax.jms:jms-api:${versionJavaJms}"
	provided "javax.transaction:transaction-api:${versionJavaTransaction}"
	compileOnly "org.projectlombok:lombok:${versionLombok}"
	testRuntime "org.glassfish:javax.el:${versionJavaEl}"
	testCompile "org.springframework:spring-test:${versionSpring}"
	testCompile "junit:junit:${versionJunit}"
	testCompile "org.mockito:mockito-all:${versionMockito}"
}

eclipse.classpath.file {
	whenMerged { classpath ->
		classpath.entries.findAll { entry -> entry.kind == "lib" }*.exported = true
	}
}
