/*
 * Copyright 2014 agwlvssainokuni
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ${formDef.packageName};

import java.io.Serializable;

import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@Getter
@Setter
@EqualsAndHashCode
@ToString
public class ${formDef.className} implements Serializable {

	private static final long serialVersionUID = 1L;
#foreach ($prop in $formDef.propertyDef)

########################################################################
#if ($prop.type == "数値")
#if ($prop.required == "○")
	@javax.validation.constraints.NotNull
#end
#if ($prop.min)
	@javax.validation.constraints.Min($prop.min)
#end
#if ($prop.max)
	@javax.validation.constraints.Max($prop.max)
#end
################ サブ型
#if ($prop.subtype == "整数")
	private Integer ${prop.name};
#elseif ($prop.subtype == "整数(Long)")
	private Long ${prop.name};
#else
	private java.math.BigDecimal ${prop.name};
#end
########################################################################
#elseif ($prop.type == "日付" || $prop.type == "時刻" || $prop.type == "日時")
#if ($prop.required == "○")
	@javax.validation.constraints.NotNull
#end
################ サブ型
#if ($prop.subtype == "範囲下限")
	@cherry.spring.common.type.format.CustomDateTimeFormat(cherry.spring.common.type.format.CustomDateTimeFormat.Range.FROM)
#elseif ($prop.subtype == "範囲上限")
	@cherry.spring.common.type.format.CustomDateTimeFormat(cherry.spring.common.type.format.CustomDateTimeFormat.Range.TO)
#else
	@cherry.spring.common.type.format.CustomDateTimeFormat()
#end
################ 変数宣言
#if ($prop.type == "日付")
	private org.joda.time.LocalDate ${prop.name};
#elseif ($prop.type == "時刻")
	private org.joda.time.LocalTime ${prop.name};
#else
	private org.joda.time.LocalDateTime ${prop.name};
#end
########################################################################
#elseif ($prop.type == "ファイル")
#if ($prop.required == "○")
	@javax.validation.constraints.NotNull
#end
################ 変数宣言
	private org.springframework.web.multipart.MultipartFile ${prop.name};
########################################################################
#elseif ($prop.type == "文字列")
#if ($prop.required == "○")
	@org.hibernate.validator.constraints.NotEmpty
#end
#if ($prop.minlen)
	@@cherry.spring.common.validator.MinLength($prop.minlen)
#end
#if ($prop.maxlen)
	@@cherry.spring.common.validator.MaxLength($prop.maxlen)
#end
################ サブ型
#if ($prop.subtype == "半角")
	@cherry.spring.common.validator.CharType(cherry.spring.common.validator.CharType.Mode.BasicLatin)
#elseif ($prop.subtype == "半角(カナ含む)")
	@cherry.spring.common.validator.CharType(cherry.spring.common.validator.CharType.Mode.HalfWidth)
#elseif ($prop.subtype == "全角")
	@cherry.spring.common.validator.CharType(cherry.spring.common.validator.CharType.Mode.FullWidth)
#else
#end
################ 変数宣言
	private String ${prop.name};
########################################################################
#else
#end
#end

}
