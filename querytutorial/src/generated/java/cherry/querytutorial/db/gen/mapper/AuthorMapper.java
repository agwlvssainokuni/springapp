package cherry.querytutorial.db.gen.mapper;

import cherry.querytutorial.db.gen.dto.Author;
import cherry.querytutorial.db.gen.dto.AuthorCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface AuthorMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTHOR
     *
     * @mbggenerated
     */
    @SelectProvider(type=AuthorSqlProvider.class, method="countByExample")
    int countByExample(AuthorCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTHOR
     *
     * @mbggenerated
     */
    @DeleteProvider(type=AuthorSqlProvider.class, method="deleteByExample")
    int deleteByExample(AuthorCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTHOR
     *
     * @mbggenerated
     */
    @Delete({
        "delete from AUTHOR",
        "where ID = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTHOR
     *
     * @mbggenerated
     */
    @Insert({
        "insert into AUTHOR (LOGIN_ID, NAME, ",
        "UPDATED_AT, CREATED_AT, ",
        "LOCK_VERSION, DELETED_FLG)",
        "values (#{loginId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, ",
        "#{updatedAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP}, ",
        "#{lockVersion,jdbcType=INTEGER}, #{deletedFlg,jdbcType=INTEGER})"
    })
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insert(Author record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTHOR
     *
     * @mbggenerated
     */
    @InsertProvider(type=AuthorSqlProvider.class, method="insertSelective")
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insertSelective(Author record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTHOR
     *
     * @mbggenerated
     */
    @SelectProvider(type=AuthorSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="LOGIN_ID", property="loginId", jdbcType=JdbcType.VARCHAR),
        @Result(column="NAME", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="UPDATED_AT", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CREATED_AT", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="LOCK_VERSION", property="lockVersion", jdbcType=JdbcType.INTEGER),
        @Result(column="DELETED_FLG", property="deletedFlg", jdbcType=JdbcType.INTEGER)
    })
    List<Author> selectByExampleWithRowbounds(AuthorCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTHOR
     *
     * @mbggenerated
     */
    @SelectProvider(type=AuthorSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="LOGIN_ID", property="loginId", jdbcType=JdbcType.VARCHAR),
        @Result(column="NAME", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="UPDATED_AT", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CREATED_AT", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="LOCK_VERSION", property="lockVersion", jdbcType=JdbcType.INTEGER),
        @Result(column="DELETED_FLG", property="deletedFlg", jdbcType=JdbcType.INTEGER)
    })
    List<Author> selectByExample(AuthorCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTHOR
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ID, LOGIN_ID, NAME, UPDATED_AT, CREATED_AT, LOCK_VERSION, DELETED_FLG",
        "from AUTHOR",
        "where ID = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="LOGIN_ID", property="loginId", jdbcType=JdbcType.VARCHAR),
        @Result(column="NAME", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="UPDATED_AT", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CREATED_AT", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="LOCK_VERSION", property="lockVersion", jdbcType=JdbcType.INTEGER),
        @Result(column="DELETED_FLG", property="deletedFlg", jdbcType=JdbcType.INTEGER)
    })
    Author selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTHOR
     *
     * @mbggenerated
     */
    @UpdateProvider(type=AuthorSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Author record, @Param("example") AuthorCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTHOR
     *
     * @mbggenerated
     */
    @UpdateProvider(type=AuthorSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Author record, @Param("example") AuthorCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTHOR
     *
     * @mbggenerated
     */
    @UpdateProvider(type=AuthorSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Author record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AUTHOR
     *
     * @mbggenerated
     */
    @Update({
        "update AUTHOR",
        "set LOGIN_ID = #{loginId,jdbcType=VARCHAR},",
          "NAME = #{name,jdbcType=VARCHAR},",
          "UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},",
          "CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},",
          "LOCK_VERSION = #{lockVersion,jdbcType=INTEGER},",
          "DELETED_FLG = #{deletedFlg,jdbcType=INTEGER}",
        "where ID = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Author record);
}