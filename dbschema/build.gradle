apply plugin: "eclipse-wtp"
apply plugin: "flyway"
apply plugin: "mybatis"
apply plugin: "querydsl"

import com.mysema.query.sql.types.LocalDateTimeType;
import com.mysema.query.sql.types.LocalDateType;
import com.mysema.query.sql.types.LocalTimeType;

buildscript {
	repositories { mavenCentral() }
	dependencies {
		classpath "com.h2database:h2:1.4.180"
		classpath "org.flywaydb:flyway-gradle-plugin:3.0"
	}
}

flyway {
	driver = "org.h2.Driver"
	url = "jdbc:h2:./dbschema/build/mbgenerator"
	user = "sa"
	encoding = "UTF-8"
}

mybatis {
	configFile = new java.io.File("dbschema/mbgenerator.xml")
	overwrite = true
	verbose = true
}

mybatisgen.dependsOn flywayMigrate

querydsl {
	driver = "org.h2.Driver"
	url = "jdbc:h2:./dbschema/build/mbgenerator"
	user = "sa"
	exporter {
		packageName = "cherry.spring.common.db.gen.query"
		beanPackageName = "cherry.spring.common.db.gen.query"
		targetFolder = new java.io.File("common/src/querydsl/java")
		beanSerializer = new com.mysema.query.codegen.BeanSerializer()
		sourceEncoding = "UTF-8"
	}
	configuration {
		register(new LocalDateType());
		register(new LocalTimeType());
		register(new LocalDateTimeType());
	}
}

querydslgen.dependsOn flywayMigrate

task h2start(dependsOn: "classes", type: JavaExec) {
	main = "org.h2.tools.Server"
	classpath = buildscript.configurations.classpath + sourceSets.main.runtimeClasspath
	args "-tcp", "-tcpPort", "9092"
}

task h2stop(type: JavaExec) {
	main = "org.h2.tools.Server"
	classpath = buildscript.configurations.classpath
	args "-tcpShutdown", "tcp://localhost:9092"
}
