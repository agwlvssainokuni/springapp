apply plugin: "jettyEclipse"

sourceSets { container }
eclipse {
	classpath.plusConfigurations += [configurations.containerCompile]
}

ext {
	versionArgs4j = "2.32"
	versionJetty = "9.2.12.v20150709"
	//	versionJetty = "9.3.1.v20150714"
}

dependencies {
	compile project(":goods")
	compile project(":foundation")
	compile "org.apache.tiles:tiles-core:${versionTiles}"
	compile "org.apache.tiles:tiles-api:${versionTiles}"
	compile "org.apache.tiles:tiles-servlet:${versionTiles}"
	compile "org.apache.tiles:tiles-jsp:${versionTiles}"
	compile "org.apache.tiles:tiles-el:${versionTiles}"
	compile "org.apache.tiles:tiles-extras:${versionTiles}"
	compile "javax.servlet:jstl:${versionJstl}"
	runtime "org.flywaydb:flyway-core:${versionFlyway}"
	runtime "ch.qos.logback:logback-core:${versionLogback}"
	runtime "ch.qos.logback:logback-classic:${versionLogback}"
	providedCompile "javax.servlet:javax.servlet-api:${versionJavaServlet}"
	providedCompile "javax.servlet.jsp:javax.servlet.jsp-api:${versionJavaJsp}"
	providedCompile "javax.jms:jms-api:${versionJavaJms}"
	providedCompile "javax.transaction:transaction-api:${versionJavaTransaction}"
	compileOnly "org.projectlombok:lombok:${versionLombok}"
	containerCompile "args4j:args4j:${versionArgs4j}"
	containerCompile "org.eclipse.jetty:jetty-webapp:${versionJetty}"
	containerCompile "org.eclipse.jetty:jetty-plus:${versionJetty}"
	// containerCompile "org.eclipse.jetty:jetty-jsp:${versionJetty}"
	containerCompile "org.eclipse.jetty:apache-jsp:${versionJetty}"
	containerCompile "org.eclipse.jetty:jetty-annotations:${versionJetty}"
	containerCompile "com.h2database:h2:${versionH2db}"
	containerCompile "org.apache.commons:commons-dbcp2:${versionCommonsDbcp2}"
	testRuntime "com.h2database:h2:${versionH2db}"
}

war {
	from sourceSets.container.output.classesDir
	from sourceSets.container.output.resourcesDir
	manifest.attributes "Main-Class": "Main"
	manifest.attributes "Class-Path": configurations.containerCompile.files.collect { "deps/" + it.name }.join(" ")
	dependsOn containerClasses
}

task executable(type: Copy, dependsOn: war) {
	into "build/executable"
	from("build/libs") { include "*.war" }
	into("deps") { from configurations.containerCompile.files }
}
assemble.dependsOn(executable)

buildscript {
	ext { versionJetty = "9.2.12.v20150709" }
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("com.sahlbach.gradle:gradle-jetty-eclipse-plugin:1.9.+") { exclude group: "org.eclipse.jetty" }
		classpath "org.eclipse.jetty:jetty-webapp:${versionJetty}"
		classpath "org.eclipse.jetty:jetty-plus:${versionJetty}"
		// classpath "org.eclipse.jetty:jetty-jsp:${versionJetty}"
		classpath "org.eclipse.jetty:apache-jsp:${versionJetty}"
		classpath "org.eclipse.jetty:jetty-annotations:${versionJetty}"
		classpath "com.h2database:h2:${versionH2db}"
	}
}

jettyEclipse {
	jettyConfig = file("jetty-config.xml")
	additionalRuntimeJars = buildscript.configurations.classpath
}
