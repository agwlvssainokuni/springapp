<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:security="http://www.springframework.org/schema/security" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:property-placeholder location="classpath:sqlman.properties" ignore-unresolvable="true" />

	<context:component-scan base-package="cherry.sqlman" />

	<mybatis-spring:scan base-package="cherry.sqlman.db" />

	<tx:annotation-driven />
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<cache:annotation-driven />
	<bean id="cacheManager" class="org.springframework.cache.guava.GuavaCacheManager">
		<property name="cacheSpecification" value="concurrencyLevel=4,expireAfterAccess=10s,expireAfterWrite=1m,weakValues" />
	</bean>

	<bean class="cherry.goods.log.Log" factory-method="setMessageDef">
		<constructor-arg value="log" />
	</bean>

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>message/code</value>
				<value>message/error</value>
				<value>message/form</value>
				<value>message/page</value>
				<value>message/validation</value>
				<value>message/preseterror</value>
			</list>
		</property>
	</bean>

	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider user-service-ref="userDetailsService">
			<security:password-encoder ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>
	<security:user-service id="userInFile" properties="${sqlman.userfile}" />
	<bean id="userDetailsService" class="cherry.sqlman.security.CompositeUserDetailsService">
		<property name="delegates">
			<list>
				<ref bean="userInFile" />
				<bean class="cherry.sqlman.security.UserDetailsServiceImpl">
					<property name="queryFactory" ref="queryFactory" />
					<property name="role" value="ROLE_USER" />
				</bean>
			</list>
		</property>
	</bean>

	<security:http auto-config="false" authentication-manager-ref="authenticationManager">
		<security:intercept-url pattern="/tool/**" access="isAuthenticated() and hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
		<security:intercept-url pattern="/admin/**" access="isAuthenticated() and hasRole('ROLE_ADMIN')" />
		<security:form-login login-page="/login/start" login-processing-url="/login/execute"
			authentication-failure-url="/login/start?loginFailed" default-target-url="/tool/" always-use-default-target="false"
			username-parameter="loginId" password-parameter="password" />
		<security:logout logout-url="/logout" logout-success-url="/login/start?loggedOut" invalidate-session="true" />
		<security:csrf request-matcher-ref="csrfRequestMatcher" />
	</security:http>

	<bean id="csrfRequestMatcher" class="cherry.foundation.springmvc.CsrfRequestMatcher">
		<property name="excludes">
			<list>
				<bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher" c:pattern="/login/**" />
				<bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher" c:pattern="/logout/**" />
			</list>
		</property>
	</bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/login/**" />
			<mvc:mapping path="/logout/**" />
			<mvc:mapping path="/tool/**" />
			<mvc:mapping path="/admin/**" />
			<bean class="cherry.foundation.springmvc.OperationLogHandlerInterceptor" />
		</mvc:interceptor>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
		<bean class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor" />
		<bean class="org.springframework.mobile.device.site.SitePreferenceHandlerInterceptor" />
	</mvc:interceptors>

	<mvc:annotation-driven conversion-service="conversionService">
		<mvc:argument-resolvers>
			<bean class="org.springframework.mobile.device.DeviceWebArgumentResolver" />
			<bean class="org.springframework.mobile.device.site.SitePreferenceWebArgumentResolver" />
		</mvc:argument-resolvers>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper" ref="objectMapper" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<mvc:default-servlet-handler />

	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />

	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>

	<bean id="viewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.mobile.device.view.LiteDeviceDelegatingViewResolver">
					<constructor-arg>
						<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
							<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
						</bean>
					</constructor-arg>
					<property name="mobilePrefix" value="normal/" />
					<property name="tabletPrefix" value="normal/" />
					<property name="normalPrefix" value="normal/" />
				</bean>
				<bean class="org.springframework.mobile.device.view.LiteDeviceDelegatingViewResolver">
					<constructor-arg>
						<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
							<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
							<property name="prefix" value="/WEB-INF/jsp/" />
							<property name="suffix" value=".jsp" />
						</bean>
					</constructor-arg>
					<property name="mobilePrefix" value="normal/" />
					<property name="tabletPrefix" value="normal/" />
					<property name="normalPrefix" value="normal/" />
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
					<property name="objectMapper" ref="objectMapper" />
				</bean>
			</list>
		</property>
	</bean>

	<bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />

	<bean id="navigator" class="cherry.foundation.navi.NavigatorImpl">
		<property name="navigationDef" value="classpath:navi.yaml" />
		<property name="objectMapper" ref="yamlObjectMapper" />
	</bean>

	<bean id="paginator" class="cherry.goods.paginate.PaginatorImpl">
		<property name="paginateStrategy">
			<bean class="cherry.goods.paginate.TotalCountStrategy">
				<property name="totalCount" value="${sqlman.paginator.totalCount}" />
				<property name="lowerSideHint" value="${sqlman.paginator.lowerSideHint}" />
				<property name="lowerTrim" value="1" />
				<property name="upperTrim" value="1" />
			</bean>
		</property>
	</bean>

	<bean id="bizDateTime" class="cherry.foundation.bizdtm.SimpleBizDateTime" />

	<bean id="codeStore" class="cherry.foundation.code.SimpleCodeStore" />

	<bean id="numberingStore" class="cherry.foundation.numbering.SimpleNumberingStore" />

	<bean id="mailFacade" class="cherry.foundation.mail.MailFacadeImpl">
		<property name="bizDateTime" ref="bizDateTime" />
		<property name="mailDataHandler" ref="mailDataHandler" />
		<property name="mailSendHandler" ref="mailSendHandler" />
	</bean>
	<bean id="mailDataHandler" class="cherry.foundation.mail.MailDataHandlerImpl">
		<property name="templateStore">
			<bean class="cherry.foundation.mail.SimpleTemplateStore">
				<property name="mailDataMap">
					<map key-type="java.lang.String" value-type="cherry.foundation.mail.MailData">
						<entry key="REQUEST">
							<bean class="cherry.foundation.mail.MailData">
								<property name="fromAddr" value="sqlman@example.com" />
								<property name="subject" value="パスワード発行リクエスト" />
								<property name="body" value="${model.mailAddr}, 入力URI: ${model.uri}]]" />
							</bean>
						</entry>
					</map>
				</property>
			</bean>
		</property>
		<property name="velocityEngine">
			<bean class="org.apache.velocity.app.VelocityEngine" init-method="init" />
		</property>
	</bean>
	<bean id="mailSendHandler" class="cherry.foundation.mail.MailSendHandlerImpl">
		<property name="bizDateTime" ref="bizDateTime" />
		<property name="messageStore">
			<bean class="cherry.foundation.mail.SimpleMessageStore" />
		</property>
		<property name="mailSender">
			<bean class="org.springframework.mail.javamail.JavaMailSenderImpl">
				<property name="host" value="localhost" />
				<property name="port" value="25" />
				<property name="protocol" value="smtp" />
				<property name="defaultEncoding" value="ISO-2022-JP" />
			</bean>
		</property>
	</bean>

</beans>
