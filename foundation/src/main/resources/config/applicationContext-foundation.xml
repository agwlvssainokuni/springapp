<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<context:property-placeholder location="classpath:foundation.properties"
		ignore-unresolvable="true" />

	<context:component-scan base-package="cherry.foundation" />

	<!-- トレース設定 -->
	<aop:config>
		<aop:advisor advice-ref="traceInterceptor"
			pointcut="execution(* cherry..*.*(..))
				and !execution(* cherry.foundation.log..*.*(..))
				and !execution(* cherry.foundation.type..*.*(..))
				and !execution(* cherry.foundation.crypto..*.*(..))
				and !execution(* cherry.goods.crypto..*.*(..))
				and !execution(* cherry.foundation.telno..*.*(..))
				and !execution(* cherry.goods.telno..*.*(..))
				and !execution(* cherry.goods.wakachi..*.*(..))
				" />
	</aop:config>
	<bean id="traceInterceptor" class="cherry.foundation.log.trace.TraceInterceptor">
		<property name="arrayLengthLimit" value="0" />
		<property name="objectLengthLimit" value="0" />
		<property name="packagePrefix">
			<list>
				<value>cherry</value>
			</list>
		</property>
	</bean>

	<!-- 型変換設定 -->
	<bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="customEditors">
			<map>
				<entry key="java.util.ResourceBundle" value="org.springframework.beans.propertyeditors.ResourceBundleEditor" />
				<entry key="java.text.NumberFormat" value="cherry.foundation.type.editor.NumberFormatEditor" />
				<entry key="com.ibm.icu.text.NumberFormat" value="cherry.foundation.type.editor.Icu4jNumberFormatEditor" />
				<entry key="com.ibm.icu.text.Transliterator" value="cherry.foundation.type.editor.Icu4jTransliteratorEditor" />
				<entry key="org.springframework.format.number.NumberFormatter" value="cherry.foundation.type.editor.NumberFormatterEditor" />
				<entry key="org.joda.time.format.DateTimeFormatter" value="cherry.foundation.type.editor.DateTimeFormatEditor" />
			</map>
		</property>
	</bean>
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="registerDefaultFormatters" value="false" />
		<property name="formatters">
			<set>
				<bean class="org.springframework.format.number.NumberFormatAnnotationFormatterFactory" />
				<bean class="org.springframework.format.number.NumberFormatter">
					<property name="pattern" value="###0.##" />
				</bean>
			</set>
		</property>
		<property name="formatterRegistrars">
			<set>
				<bean class="org.springframework.format.datetime.DateFormatterRegistrar" />
				<bean class="cherry.foundation.type.format.DelegateFormatterRegistrar">
					<property name="formatters">
						<list>
							<bean class="org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar">
								<property name="dateFormatter" value="yyyy/MM/dd" />
								<property name="timeFormatter" value="HH:mm:ss" />
								<property name="dateTimeFormatter" value="yyyy/MM/dd HH:mm:ss" />
							</bean>
							<bean class="cherry.foundation.type.format.CustomDateTimeFormatAnnotationFormatterFactory">
								<property name="dateToPrint" value="yyyy/MM/dd" />
								<property name="dateToParse" value="yyyy/M/d" />
								<property name="timeToPrint" value="HH:mm:ss" />
								<property name="timeToParseHm" value="H:m" />
								<property name="timeToParseS" value=":s" />
								<property name="delimiterToPrint" value=" " />
								<property name="delimiterToParse" value=" " />
							</bean>
							<bean class="cherry.foundation.type.converter.JodaTimeSqlConverterRegistrar" />
							<bean class="cherry.foundation.type.converter.SecureTypeSqlConverterRegistrar" />
							<bean class="cherry.foundation.type.converter.CodeSqlConverterRegistrar" />
						</list>
					</property>
				</bean>
			</set>
		</property>
	</bean>

	<!-- 単項目バリデーション設定 -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<!-- JSONマッピング設定 -->
	<bean id="objectMapper" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
		<property name="modules">
			<array>
				<bean class="com.fasterxml.jackson.datatype.joda.JodaModule" />
			</array>
		</property>
		<property name="featuresToDisable">
			<array>
				<util:constant static-field="com.fasterxml.jackson.databind.SerializationFeature.WRITE_DATES_AS_TIMESTAMPS" />
			</array>
		</property>
	</bean>
	<!-- YAMLマッピング設定 -->
	<bean id="yamlObjectMapper" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
		<property name="objectMapper">
			<bean class="com.fasterxml.jackson.databind.ObjectMapper">
				<constructor-arg type="com.fasterxml.jackson.core.JsonFactory">
					<bean class="com.fasterxml.jackson.dataformat.yaml.YAMLFactory" />
				</constructor-arg>
			</bean>
		</property>
		<property name="modules">
			<array>
				<bean class="com.fasterxml.jackson.datatype.joda.JodaModule" />
			</array>
		</property>
		<property name="featuresToDisable">
			<array>
				<util:constant static-field="com.fasterxml.jackson.databind.SerializationFeature.WRITE_DATES_AS_TIMESTAMPS" />
			</array>
		</property>
	</bean>

	<!-- アプリケーションコンテキスト照会設定 -->
	<bean class="cherry.foundation.AppCtxHolder" />

	<!-- メッセージソースユーティリティ設定 -->
	<bean class="cherry.foundation.util.MessageSourceUtil" factory-method="setMessageSource">
		<constructor-arg ref="messageSource" />
	</bean>

	<!-- パスワードハッシュ設定 -->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<!-- DBアクセス設定 -->
	<bean id="namedParameterJdbcOperations" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
	<bean id="queryDslJdbcOperations" class="org.springframework.data.jdbc.query.QueryDslJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
	<bean id="rowMapperCreator" class="cherry.foundation.type.jdbc.CustomBeanPropertyRowMapperCreator">
		<property name="conversionService" ref="conversionService" />
	</bean>
	<bean id="sqlParameterSourceCreator" class="cherry.foundation.type.jdbc.CustomBeanPropertySqlParameterSourceCreator" />

	<bean id="queryDslSupport" class="cherry.foundation.querydsl.QueryDslSupportImpl">
		<property name="queryDslJdbcOperations" ref="queryDslJdbcOperations" />
		<property name="paginator" ref="paginator" />
	</bean>

	<!-- ダウンロード設定 -->
	<bean id="downloadOperation" class="cherry.foundation.download.DownloadTemplate">
		<property name="headerName" value="Content-Disposition" />
		<property name="headerValue" value="attachment; filename=&quot;{0}&quot;" />
		<property name="formatter" value="yyyyMMddHHmmss" />
	</bean>
	<bean id="tableDownloadOperation" class="cherry.foundation.download.TableDownloadTemplate">
		<property name="downloadOperation" ref="downloadOperation" />
		<property name="queryDslSupport" ref="queryDslSupport" />
		<property name="csvType" value="text/csv" />
		<property name="excelType" value="application/vnd.ms-excel" />
	</bean>

	<!-- 多重POST検出機能設定 -->
	<bean id="oneTimeTokenIssuer" class="cherry.foundation.onetimetoken.OneTimeTokenIssuerImpl">
		<property name="name" value="__OneTimeToken__" />
	</bean>
	<bean id="oneTimeTokenValidator" class="cherry.foundation.onetimetoken.OneTimeTokenValidatorImpl">
		<property name="name" value="__OneTimeToken__" />
	</bean>

	<!-- DB処理補助機能設定 -->
	<bean id="sqlExecutor" class="cherry.foundation.sql.SqlExecutorImpl">
		<property name="charset" value="UTF-8" />
	</bean>
	<bean id="sqlLoader" class="cherry.foundation.sql.SqlLoaderImpl">
		<property name="charset" value="UTF-8" />
		<property name="extension" value=".sql" />
		<property name="namePattern" value="NAME:\s*(\w+)" />
	</bean>

	<bean id="extractor" class="cherry.foundation.etl.ExtractorImpl" />
	<bean id="loader" class="cherry.foundation.etl.LoaderImpl" />

	<!-- コマンド実行機能設定 -->
	<bean id="commandLauncher" class="cherry.goods.command.CommandLauncherImpl">
		<property name="charset" value="UTF-8" />
		<property name="redirectErrorStream" value="true" />
	</bean>

	<!-- 暗号機能設定 -->
	<bean id="rsaCrypto" class="cherry.foundation.crypto.RSACryptoSupport">
		<property name="privateKeyResource" value="classpath:crypto/rsa/privkey.pk8" />
		<property name="publicKeyResource" value="classpath:crypto/rsa/pubkey.der" />
	</bean>
	<bean id="aesCrypto" class="cherry.goods.crypto.VersionedCrypto">
		<property name="defaultVersion" value="0" />
		<property name="cryptoMap">
			<map key-type="java.lang.Integer" value-type="cherry.goods.crypto.Crypto">
				<entry key="0">
					<bean class="cherry.foundation.crypto.AESCryptoSupport">
						<property name="secretKeyResource" value="classpath:crypto/0/key.bin" />
						<property name="initVectorResource" value="classpath:crypto/0/iv.bin" />
						<property name="keyCrypto" ref="rsaCrypto" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>

	<!-- 区分値管理機能 -->
	<bean id="codeManager" class="cherry.foundation.code.CodeManagerImpl">
		<property name="valueTemplate" value="{0} - {1}" />
		<property name="entryCacheSpec" value="maximumSize=1000,expireAfterAccess=60m" />
		<property name="listCacheSpec" value="maximumSize=100,expireAfterAccess=60m" />
		<property name="codeStore" ref="codeStore" />
	</bean>

	<!-- 発番管理機能 -->
	<bean id="numberingManager" class="cherry.foundation.numbering.NumberingManagerImpl">
		<property name="cacheSpec" value="maximumSize=50,expireAfterAccess=60m" />
		<property name="numberingStore" ref="numberingStore" />
	</bean>

	<!-- 型関係機能設定 -->
	<!-- 区分値 -->
	<bean class="cherry.foundation.type.EnumUtil" factory-method="setMessageSource">
		<constructor-arg ref="messageSource" />
	</bean>
	<bean class="cherry.foundation.type.EnumCodeUtil" factory-method="setMessageSource">
		<constructor-arg ref="messageSource" />
	</bean>
	<!-- 項目暗号化 -->
	<bean class="cherry.foundation.type.SecureString" factory-method="setEncoder">
		<constructor-arg>
			<bean class="cherry.foundation.crypto.SecureStringEncoder">
				<property name="charset" value="UTF-8" />
				<property name="crypto" ref="aesCrypto" />
			</bean>
		</constructor-arg>
	</bean>
	<bean class="cherry.foundation.type.SecureInteger" factory-method="setEncoder">
		<constructor-arg>
			<bean class="cherry.foundation.crypto.SecureIntegerEncoder">
				<property name="crypto" ref="aesCrypto" />
			</bean>
		</constructor-arg>
	</bean>
	<bean class="cherry.foundation.type.SecureLong" factory-method="setEncoder">
		<constructor-arg>
			<bean class="cherry.foundation.crypto.SecureLongEncoder">
				<property name="crypto" ref="aesCrypto" />
			</bean>
		</constructor-arg>
	</bean>
	<bean class="cherry.foundation.type.SecureBigInteger" factory-method="setEncoder">
		<constructor-arg>
			<bean class="cherry.foundation.crypto.SecureBigIntegerEncoder">
				<property name="crypto" ref="aesCrypto" />
			</bean>
		</constructor-arg>
	</bean>
	<bean class="cherry.foundation.type.SecureBigDecimal" factory-method="setEncoder">
		<constructor-arg>
			<bean class="cherry.foundation.crypto.SecureBigDecimalEncoder">
				<property name="crypto" ref="aesCrypto" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- 文字列処理 -->
	<!-- オブジェクト描画 -->
	<bean id="objectRenderer" class="cherry.foundation.render.ObjectRendererImpl">
		<property name="conversionService" ref="conversionService" />
		<property name="numberFormatter">
			<list>
				<value>#,##0.###</value>
				<value>#,##0.0</value>
				<value>#,##0.00</value>
				<value>#,##0.000</value>
			</list>
		</property>
	</bean>

	<!-- 分かち書き -->
	<bean id="wakachigakiSeparator" class="cherry.goods.wakachi.CompositeSeparator">
		<property name="separators">
			<list value-type="cherry.goods.wakachi.Separator">
				<bean class="cherry.goods.wakachi.SpaceCharSeparator" />
				<bean class="cherry.goods.wakachi.UnicodeBlockSeparator" />
				<bean class="cherry.goods.wakachi.NgramSeparator">
					<property name="applyToAscii" value="false" />
					<property name="length" value="2" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- 電話番号正規化 -->
	<bean id="telNoNormalizer" class="cherry.goods.telno.TelNoNormalizerImpl">
		<property name="areaCodeTable">
			<bean class="cherry.foundation.telno.AreaCodeTableFactory">
				<property name="soumuExcelParser">
					<bean class="cherry.goods.telno.SoumuExcelParser">
						<property name="numberLabel" value="番号" />
						<property name="areaCodeLabel" value="市外局番" />
						<property name="localCodeLabel" value="市内局番" />
					</bean>
				</property>
				<property name="resources">
					<list value-type="org.springframework.core.io.Resource">
						<value>classpath:cherry/goods/telno/soumu/000124070.xls</value>
						<value>classpath:cherry/goods/telno/soumu/000124071.xls</value>
						<value>classpath:cherry/goods/telno/soumu/000124072.xls</value>
						<value>classpath:cherry/goods/telno/soumu/000124073.xls</value>
						<value>classpath:cherry/goods/telno/soumu/000124074.xls</value>
						<value>classpath:cherry/goods/telno/soumu/000124075.xls</value>
						<value>classpath:cherry/goods/telno/soumu/000124076.xls</value>
						<value>classpath:cherry/goods/telno/soumu/000124077.xls</value>
						<value>classpath:cherry/goods/telno/soumu/000124078.xls</value>
					</list>
				</property>
			</bean>
		</property>
	</bean>

</beans>
