package cherry.foundation.db.gen.dto;

import cherry.foundation.type.SecureBigDecimal;
import cherry.foundation.type.SecureBigInteger;
import cherry.foundation.type.SecureInteger;
import cherry.foundation.type.SecureLong;
import cherry.foundation.type.SecureString;
import java.util.ArrayList;
import java.util.List;

public class VerifySecureCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table VERIFY_SECURE
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table VERIFY_SECURE
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table VERIFY_SECURE
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_SECURE
     *
     * @mbggenerated
     */
    public VerifySecureCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_SECURE
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_SECURE
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_SECURE
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_SECURE
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_SECURE
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_SECURE
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_SECURE
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_SECURE
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_SECURE
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_SECURE
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table VERIFY_SECURE
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andStrIsNull() {
            addCriterion("STR is null");
            return (Criteria) this;
        }

        public Criteria andStrIsNotNull() {
            addCriterion("STR is not null");
            return (Criteria) this;
        }

        public Criteria andStrEqualTo(SecureString value) {
            addCriterion("STR =", value, "str");
            return (Criteria) this;
        }

        public Criteria andStrNotEqualTo(SecureString value) {
            addCriterion("STR <>", value, "str");
            return (Criteria) this;
        }

        public Criteria andStrGreaterThan(SecureString value) {
            addCriterion("STR >", value, "str");
            return (Criteria) this;
        }

        public Criteria andStrGreaterThanOrEqualTo(SecureString value) {
            addCriterion("STR >=", value, "str");
            return (Criteria) this;
        }

        public Criteria andStrLessThan(SecureString value) {
            addCriterion("STR <", value, "str");
            return (Criteria) this;
        }

        public Criteria andStrLessThanOrEqualTo(SecureString value) {
            addCriterion("STR <=", value, "str");
            return (Criteria) this;
        }

        public Criteria andStrLike(SecureString value) {
            addCriterion("STR like", value, "str");
            return (Criteria) this;
        }

        public Criteria andStrNotLike(SecureString value) {
            addCriterion("STR not like", value, "str");
            return (Criteria) this;
        }

        public Criteria andStrIn(List<SecureString> values) {
            addCriterion("STR in", values, "str");
            return (Criteria) this;
        }

        public Criteria andStrNotIn(List<SecureString> values) {
            addCriterion("STR not in", values, "str");
            return (Criteria) this;
        }

        public Criteria andStrBetween(SecureString value1, SecureString value2) {
            addCriterion("STR between", value1, value2, "str");
            return (Criteria) this;
        }

        public Criteria andStrNotBetween(SecureString value1, SecureString value2) {
            addCriterion("STR not between", value1, value2, "str");
            return (Criteria) this;
        }

        public Criteria andInt32IsNull() {
            addCriterion("INT32 is null");
            return (Criteria) this;
        }

        public Criteria andInt32IsNotNull() {
            addCriterion("INT32 is not null");
            return (Criteria) this;
        }

        public Criteria andInt32EqualTo(SecureInteger value) {
            addCriterion("INT32 =", value, "int32");
            return (Criteria) this;
        }

        public Criteria andInt32NotEqualTo(SecureInteger value) {
            addCriterion("INT32 <>", value, "int32");
            return (Criteria) this;
        }

        public Criteria andInt32GreaterThan(SecureInteger value) {
            addCriterion("INT32 >", value, "int32");
            return (Criteria) this;
        }

        public Criteria andInt32GreaterThanOrEqualTo(SecureInteger value) {
            addCriterion("INT32 >=", value, "int32");
            return (Criteria) this;
        }

        public Criteria andInt32LessThan(SecureInteger value) {
            addCriterion("INT32 <", value, "int32");
            return (Criteria) this;
        }

        public Criteria andInt32LessThanOrEqualTo(SecureInteger value) {
            addCriterion("INT32 <=", value, "int32");
            return (Criteria) this;
        }

        public Criteria andInt32Like(SecureInteger value) {
            addCriterion("INT32 like", value, "int32");
            return (Criteria) this;
        }

        public Criteria andInt32NotLike(SecureInteger value) {
            addCriterion("INT32 not like", value, "int32");
            return (Criteria) this;
        }

        public Criteria andInt32In(List<SecureInteger> values) {
            addCriterion("INT32 in", values, "int32");
            return (Criteria) this;
        }

        public Criteria andInt32NotIn(List<SecureInteger> values) {
            addCriterion("INT32 not in", values, "int32");
            return (Criteria) this;
        }

        public Criteria andInt32Between(SecureInteger value1, SecureInteger value2) {
            addCriterion("INT32 between", value1, value2, "int32");
            return (Criteria) this;
        }

        public Criteria andInt32NotBetween(SecureInteger value1, SecureInteger value2) {
            addCriterion("INT32 not between", value1, value2, "int32");
            return (Criteria) this;
        }

        public Criteria andInt64IsNull() {
            addCriterion("INT64 is null");
            return (Criteria) this;
        }

        public Criteria andInt64IsNotNull() {
            addCriterion("INT64 is not null");
            return (Criteria) this;
        }

        public Criteria andInt64EqualTo(SecureLong value) {
            addCriterion("INT64 =", value, "int64");
            return (Criteria) this;
        }

        public Criteria andInt64NotEqualTo(SecureLong value) {
            addCriterion("INT64 <>", value, "int64");
            return (Criteria) this;
        }

        public Criteria andInt64GreaterThan(SecureLong value) {
            addCriterion("INT64 >", value, "int64");
            return (Criteria) this;
        }

        public Criteria andInt64GreaterThanOrEqualTo(SecureLong value) {
            addCriterion("INT64 >=", value, "int64");
            return (Criteria) this;
        }

        public Criteria andInt64LessThan(SecureLong value) {
            addCriterion("INT64 <", value, "int64");
            return (Criteria) this;
        }

        public Criteria andInt64LessThanOrEqualTo(SecureLong value) {
            addCriterion("INT64 <=", value, "int64");
            return (Criteria) this;
        }

        public Criteria andInt64Like(SecureLong value) {
            addCriterion("INT64 like", value, "int64");
            return (Criteria) this;
        }

        public Criteria andInt64NotLike(SecureLong value) {
            addCriterion("INT64 not like", value, "int64");
            return (Criteria) this;
        }

        public Criteria andInt64In(List<SecureLong> values) {
            addCriterion("INT64 in", values, "int64");
            return (Criteria) this;
        }

        public Criteria andInt64NotIn(List<SecureLong> values) {
            addCriterion("INT64 not in", values, "int64");
            return (Criteria) this;
        }

        public Criteria andInt64Between(SecureLong value1, SecureLong value2) {
            addCriterion("INT64 between", value1, value2, "int64");
            return (Criteria) this;
        }

        public Criteria andInt64NotBetween(SecureLong value1, SecureLong value2) {
            addCriterion("INT64 not between", value1, value2, "int64");
            return (Criteria) this;
        }

        public Criteria andBigintIsNull() {
            addCriterion("BIGINT is null");
            return (Criteria) this;
        }

        public Criteria andBigintIsNotNull() {
            addCriterion("BIGINT is not null");
            return (Criteria) this;
        }

        public Criteria andBigintEqualTo(SecureBigInteger value) {
            addCriterion("BIGINT =", value, "bigint");
            return (Criteria) this;
        }

        public Criteria andBigintNotEqualTo(SecureBigInteger value) {
            addCriterion("BIGINT <>", value, "bigint");
            return (Criteria) this;
        }

        public Criteria andBigintGreaterThan(SecureBigInteger value) {
            addCriterion("BIGINT >", value, "bigint");
            return (Criteria) this;
        }

        public Criteria andBigintGreaterThanOrEqualTo(SecureBigInteger value) {
            addCriterion("BIGINT >=", value, "bigint");
            return (Criteria) this;
        }

        public Criteria andBigintLessThan(SecureBigInteger value) {
            addCriterion("BIGINT <", value, "bigint");
            return (Criteria) this;
        }

        public Criteria andBigintLessThanOrEqualTo(SecureBigInteger value) {
            addCriterion("BIGINT <=", value, "bigint");
            return (Criteria) this;
        }

        public Criteria andBigintLike(SecureBigInteger value) {
            addCriterion("BIGINT like", value, "bigint");
            return (Criteria) this;
        }

        public Criteria andBigintNotLike(SecureBigInteger value) {
            addCriterion("BIGINT not like", value, "bigint");
            return (Criteria) this;
        }

        public Criteria andBigintIn(List<SecureBigInteger> values) {
            addCriterion("BIGINT in", values, "bigint");
            return (Criteria) this;
        }

        public Criteria andBigintNotIn(List<SecureBigInteger> values) {
            addCriterion("BIGINT not in", values, "bigint");
            return (Criteria) this;
        }

        public Criteria andBigintBetween(SecureBigInteger value1, SecureBigInteger value2) {
            addCriterion("BIGINT between", value1, value2, "bigint");
            return (Criteria) this;
        }

        public Criteria andBigintNotBetween(SecureBigInteger value1, SecureBigInteger value2) {
            addCriterion("BIGINT not between", value1, value2, "bigint");
            return (Criteria) this;
        }

        public Criteria andBigdecIsNull() {
            addCriterion("BIGDEC is null");
            return (Criteria) this;
        }

        public Criteria andBigdecIsNotNull() {
            addCriterion("BIGDEC is not null");
            return (Criteria) this;
        }

        public Criteria andBigdecEqualTo(SecureBigDecimal value) {
            addCriterion("BIGDEC =", value, "bigdec");
            return (Criteria) this;
        }

        public Criteria andBigdecNotEqualTo(SecureBigDecimal value) {
            addCriterion("BIGDEC <>", value, "bigdec");
            return (Criteria) this;
        }

        public Criteria andBigdecGreaterThan(SecureBigDecimal value) {
            addCriterion("BIGDEC >", value, "bigdec");
            return (Criteria) this;
        }

        public Criteria andBigdecGreaterThanOrEqualTo(SecureBigDecimal value) {
            addCriterion("BIGDEC >=", value, "bigdec");
            return (Criteria) this;
        }

        public Criteria andBigdecLessThan(SecureBigDecimal value) {
            addCriterion("BIGDEC <", value, "bigdec");
            return (Criteria) this;
        }

        public Criteria andBigdecLessThanOrEqualTo(SecureBigDecimal value) {
            addCriterion("BIGDEC <=", value, "bigdec");
            return (Criteria) this;
        }

        public Criteria andBigdecLike(SecureBigDecimal value) {
            addCriterion("BIGDEC like", value, "bigdec");
            return (Criteria) this;
        }

        public Criteria andBigdecNotLike(SecureBigDecimal value) {
            addCriterion("BIGDEC not like", value, "bigdec");
            return (Criteria) this;
        }

        public Criteria andBigdecIn(List<SecureBigDecimal> values) {
            addCriterion("BIGDEC in", values, "bigdec");
            return (Criteria) this;
        }

        public Criteria andBigdecNotIn(List<SecureBigDecimal> values) {
            addCriterion("BIGDEC not in", values, "bigdec");
            return (Criteria) this;
        }

        public Criteria andBigdecBetween(SecureBigDecimal value1, SecureBigDecimal value2) {
            addCriterion("BIGDEC between", value1, value2, "bigdec");
            return (Criteria) this;
        }

        public Criteria andBigdecNotBetween(SecureBigDecimal value1, SecureBigDecimal value2) {
            addCriterion("BIGDEC not between", value1, value2, "bigdec");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table VERIFY_SECURE
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table VERIFY_SECURE
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}