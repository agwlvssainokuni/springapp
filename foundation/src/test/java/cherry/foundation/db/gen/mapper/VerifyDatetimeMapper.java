package cherry.foundation.db.gen.mapper;

import cherry.foundation.db.gen.dto.VerifyDatetime;
import cherry.foundation.db.gen.dto.VerifyDatetimeCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface VerifyDatetimeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_DATETIME
     *
     * @mbggenerated
     */
    @SelectProvider(type=VerifyDatetimeSqlProvider.class, method="countByExample")
    int countByExample(VerifyDatetimeCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_DATETIME
     *
     * @mbggenerated
     */
    @DeleteProvider(type=VerifyDatetimeSqlProvider.class, method="deleteByExample")
    int deleteByExample(VerifyDatetimeCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_DATETIME
     *
     * @mbggenerated
     */
    @Delete({
        "delete from VERIFY_DATETIME",
        "where ID = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_DATETIME
     *
     * @mbggenerated
     */
    @Insert({
        "insert into VERIFY_DATETIME (DT, TM, DTM)",
        "values (#{dt,jdbcType=DATE}, #{tm,jdbcType=TIME}, #{dtm,jdbcType=TIMESTAMP})"
    })
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insert(VerifyDatetime record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_DATETIME
     *
     * @mbggenerated
     */
    @InsertProvider(type=VerifyDatetimeSqlProvider.class, method="insertSelective")
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insertSelective(VerifyDatetime record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_DATETIME
     *
     * @mbggenerated
     */
    @SelectProvider(type=VerifyDatetimeSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="DT", property="dt", jdbcType=JdbcType.DATE),
        @Result(column="TM", property="tm", jdbcType=JdbcType.TIME),
        @Result(column="DTM", property="dtm", jdbcType=JdbcType.TIMESTAMP)
    })
    List<VerifyDatetime> selectByExampleWithRowbounds(VerifyDatetimeCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_DATETIME
     *
     * @mbggenerated
     */
    @SelectProvider(type=VerifyDatetimeSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="DT", property="dt", jdbcType=JdbcType.DATE),
        @Result(column="TM", property="tm", jdbcType=JdbcType.TIME),
        @Result(column="DTM", property="dtm", jdbcType=JdbcType.TIMESTAMP)
    })
    List<VerifyDatetime> selectByExample(VerifyDatetimeCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_DATETIME
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ID, DT, TM, DTM",
        "from VERIFY_DATETIME",
        "where ID = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="DT", property="dt", jdbcType=JdbcType.DATE),
        @Result(column="TM", property="tm", jdbcType=JdbcType.TIME),
        @Result(column="DTM", property="dtm", jdbcType=JdbcType.TIMESTAMP)
    })
    VerifyDatetime selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_DATETIME
     *
     * @mbggenerated
     */
    @UpdateProvider(type=VerifyDatetimeSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") VerifyDatetime record, @Param("example") VerifyDatetimeCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_DATETIME
     *
     * @mbggenerated
     */
    @UpdateProvider(type=VerifyDatetimeSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") VerifyDatetime record, @Param("example") VerifyDatetimeCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_DATETIME
     *
     * @mbggenerated
     */
    @UpdateProvider(type=VerifyDatetimeSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(VerifyDatetime record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VERIFY_DATETIME
     *
     * @mbggenerated
     */
    @Update({
        "update VERIFY_DATETIME",
        "set DT = #{dt,jdbcType=DATE},",
          "TM = #{tm,jdbcType=TIME},",
          "DTM = #{dtm,jdbcType=TIMESTAMP}",
        "where ID = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(VerifyDatetime record);
}