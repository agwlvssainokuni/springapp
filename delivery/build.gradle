task distZip(type: Zip) {

	baseName = parent.name
	classifier "dist"
	def web = ["admin", "site"]
	def batch = ["batch"]

	for (String dir : web) {
		into("${dir}/app") {
			from("../${dir}/build/libs") {
				include "*.war"
			}
		}
		into("${dir}/conf") {
			from("../${dir}/build/resources/main") {
				include "*.properties"
				exclude "${dir}.properties"
				exclude "log.properties"
				rename { it + ".template" }
			}
		}
		into("${dir}/log") {
		}
	}

	for (String dir : batch) {
		into("${dir}") {
			from("../${dir}/build/install/${dir}")
			exclude "resources/**"
		}
		into("${dir}/conf") {
			from("../${dir}/build/resources/main") {
				include "*.properties"
				exclude "${dir}.properties"
				exclude "log.properties"
				rename { it + ".template" }
			}
		}
		into("${dir}/log") {
		}
	}
}

distZip.dependsOn ":admin:war", ":site:war", ":batch:installApp"
